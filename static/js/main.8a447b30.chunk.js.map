{"version":3,"sources":["reactComponentLib/index.js","context/SelectedItemContext.ts","ClearSelectionBtn.tsx","SelectedItem.tsx","Item.tsx","ItemList.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["Subject","value","_this","this","counter","initialValue","subscribers","next","nextValueOrFunc","functionResult","Promise","then","nextValue","Object","values","forEach","subscriber","catch","nextValue_1","nextValue_2","subscribe","fn","index","unsubscribe","destroy","getValue","SelectedItemContext","_a","initalContextValue","subject","Context","React","createContext","Provider","children","createElement","useInitialValue","useContext","useSubscription","subscriptionFunc","useEffect","subscription","useValue","useState","setValue","newValue","useSetValue","useValueWithSubscription","shouldRerenderFunc","prevValue","useRef","shouldRerender","current","undefined","ClearSelectionBtn","console","log","onClick","res","rej","SelectedItem","Item","item","selectedItem","isSelected","style","backgroundColor","prevItem","ItemList","items","map","key","App","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a447b30.chunk.js","sourcesContent":["/* eslint-disable */\nimport React from 'react';\n\nvar Subject = /** @class */ (function () {\r\n    function Subject(value) {\r\n        var _this = this;\r\n        this.counter = 0;\r\n        this.initialValue = null;\r\n        this.value = null;\r\n        this.subscribers = {};\r\n        this.next = function (nextValueOrFunc) {\r\n            if (typeof nextValueOrFunc === 'function') {\r\n                var functionResult = nextValueOrFunc(_this.value);\r\n                if (functionResult instanceof Promise) {\r\n                    functionResult\r\n                        .then(function (nextValue) {\r\n                        _this.value = nextValue;\r\n                        Object.values(_this.subscribers).forEach(function (subscriber) { return subscriber(nextValue); });\r\n                    })\r\n                        .catch(function () { });\r\n                }\r\n                else {\r\n                    var nextValue_1 = functionResult;\r\n                    _this.value = nextValue_1;\r\n                    Object.values(_this.subscribers).forEach(function (subscriber) { return subscriber(nextValue_1); });\r\n                }\r\n            }\r\n            else {\r\n                var nextValue_2 = nextValueOrFunc;\r\n                _this.value = nextValue_2;\r\n                Object.values(_this.subscribers).forEach(function (subscriber) { return subscriber(nextValue_2); });\r\n            }\r\n        };\r\n        this.subscribe = function (fn) {\r\n            var index = \"\" + _this.counter++;\r\n            _this.subscribers[index] = fn;\r\n            return {\r\n                unsubscribe: function () {\r\n                    delete _this.subscribers[index];\r\n                },\r\n            };\r\n        };\r\n        this.destroy = function () {\r\n            _this.value = _this.initialValue;\r\n            _this.subscribers = {};\r\n        };\r\n        this.getValue = function () { return _this.value; };\r\n        this.initialValue = value;\r\n        this.value = value;\r\n    }\r\n    return Subject;\r\n}());\n\nvar createContext = function (_a) {\r\n    var initialValue = _a.initialValue;\r\n    var subject = new Subject(initialValue);\r\n    var initalContextValue = { subject: subject };\r\n    var Context = React.createContext(initalContextValue);\r\n    var Provider = function (_a) {\r\n        var children = _a.children;\r\n        return (React.createElement(Context.Provider, { value: initalContextValue }, children));\r\n    };\r\n    var useInitialValue = function () {\r\n        var subject = React.useContext(Context).subject;\r\n        return subject.getValue();\r\n    };\r\n    var useSubscription = function (subscriptionFunc) {\r\n        var subject = React.useContext(Context).subject;\r\n        React.useEffect(function () {\r\n            var subscription = subject.subscribe(subscriptionFunc);\r\n            return function () { return subscription.unsubscribe(); };\r\n        });\r\n    };\r\n    var useValue = function () {\r\n        var subject = React.useContext(Context).subject;\r\n        var initialValue = subject.getValue();\r\n        var _a = React.useState(initialValue), value = _a[0], setValue = _a[1];\r\n        React.useEffect(function () {\r\n            var subscription = subject.subscribe(function (newValue) { return setValue(newValue); });\r\n            return function () { return subscription.unsubscribe(); };\r\n        });\r\n        return value;\r\n    };\r\n    var useSetValue = function () {\r\n        var subject = React.useContext(Context).subject;\r\n        return subject.next;\r\n    };\r\n    var useValueWithSubscription = function (shouldRerenderFunc) {\r\n        var subject = React.useContext(Context).subject;\r\n        var initialValue = subject.getValue();\r\n        var _a = React.useState(initialValue), value = _a[0], setValue = _a[1];\r\n        var prevValue = React.useRef(initialValue);\r\n        React.useEffect(function () {\r\n            var subscription = subject.subscribe(function (newValue) {\r\n                var shouldRerender = shouldRerenderFunc(newValue, prevValue.current);\r\n                prevValue.current = newValue;\r\n                if (shouldRerender) {\r\n                    setValue(newValue);\r\n                }\r\n            });\r\n            return function () { return subscription.unsubscribe(); };\r\n        });\r\n        return value;\r\n    };\r\n    return { Provider: Provider, useInitialValue: useInitialValue, useSubscription: useSubscription, useValue: useValue, useSetValue: useSetValue, useValueWithSubscription: useValueWithSubscription };\r\n};\n\nexport { createContext };\n","import { createContext } from '../reactComponentLib';\n\nexport type SelectedItemType = string | undefined;\n\nexport const SelectedItemContext = createContext({ initialValue: undefined as SelectedItemType });\n","import React from 'react';\n\nimport { SelectedItemContext } from './context/SelectedItemContext';\n\nexport const ClearSelectionBtn = () => {\n  console.log(`ClearSelectionBtn rendered`);\n\n  const setValue = SelectedItemContext.useSetValue();\n  const handleClick = () =>\n    setValue(\n      prevValue =>\n        new Promise((res, rej) => {\n          if (prevValue === undefined) return rej();\n          return res(undefined);\n        }),\n    );\n\n  return <div onClick={handleClick}>Clear selection</div>;\n};\n","import React from 'react';\n\nimport { SelectedItemContext } from './context/SelectedItemContext';\n\nexport const SelectedItem = () => {\n  console.log(`SelectedItem rendered`);\n\n  const value = SelectedItemContext.useValue();\n\n  if (typeof value !== 'undefined') return <div>Selected item: {value}</div>;\n\n  return <div>No item is selected</div>;\n};\n","import React from 'react';\n\nimport { ItemType } from './ItemType';\nimport { SelectedItemContext } from './context/SelectedItemContext';\n\nexport interface ItemProps {\n  item: ItemType;\n}\n\nexport const Item: React.FC<ItemProps> = ({ item }) => {\n  console.log(`Item ${item} rendered`);\n\n  const selectedItem = SelectedItemContext.useValueWithSubscription((newValue, prevValue) => {\n    if (prevValue === item && newValue !== item) return true;\n    if (prevValue !== item && newValue === item) return true;\n    return false;\n  });\n\n  const setValue = SelectedItemContext.useSetValue();\n  const handleClick = () => setValue(prevItem => (prevItem === item ? undefined : item));\n\n  const isSelected = selectedItem === item;\n\n  return (\n    <div style={{ backgroundColor: isSelected ? 'red' : 'transparent' }} onClick={handleClick}>\n      Item: {item}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { ItemType } from './ItemType';\nimport { Item } from './Item';\n\nexport interface ItemListProps {\n  items: ItemType[];\n}\n\nexport const ItemList: React.FC<ItemListProps> = ({ items }) => {\n  console.log(`ItemList rendered`);\n\n  return (\n    <div>\n      {items.map(item => (\n        <Item key={item} item={item} />\n      ))}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nimport { SelectedItemContext } from './context/SelectedItemContext';\nimport { ClearSelectionBtn } from './ClearSelectionBtn';\nimport { SelectedItem } from './SelectedItem';\nimport { ItemList } from './ItemList';\n\nconst items = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\nclass App extends Component {\n  render() {\n    return (\n      <SelectedItemContext.Provider>\n        <ClearSelectionBtn />\n        <SelectedItem />\n        <ItemList items={items} />\n      </SelectedItemContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}